digraph G {
//	size="5,8!";
//	size="4,6!";

  _CONTINUE_1 [label="..."]
  _CONTINUE_2 [label="..."]  

  _90_function_definition[label="_90_function_definition"]
//  _91_preanalisys[label="{_91_preanalisys|void\ is_not CLASS\ STRUCT\ UNION}", shape="record", color=black, style=dotted]
  _92_decl_specifier_seq_opt[label="_92_decl_specifier_seq_opt"]
  _93_decl_specifier_seq[label="SUBTREE TO MATCH void ..."]
//  _94_decl_specifier[label="_94_decl_specifier"]
//  _95_preanalisys[label="{_95_preanalisys|void\ is_not ;\ )\ COLONCOLON\ IDENTIFIER\ ~\ #}", shape="record", color=black, style=dotted]
//  _96_storage_class_specifier[label="{_96_storage_class_specifier|void\ is_not AUTO\ REGISTER\ STATIC\ EXTERN\ MUTABLE}", shape="record", color=black, style=dotted]
//  _97_type_specifier[label="_97_type_specifier"]
//  _98_simple_type_specifier[label="{_98_simple_type_specifier|void is VOID\l|void\ is_not TEMPLATE_TYPE\ CHAR\ WCHAR_T\ BOOL\ SHORT\ INT\ LONG\ SIGNED\ UNSIGNED\ FLOAT\ DOUBLE}", shape="record", color=green]
//  _99_type_name[label="_99_type_name"]
//  _100_class_name[label="{_100_class_name|void\ is_not CLASS_NAME}", shape="record", color=black, style=dotted]
//  _101_enum_name[label="{_101_enum_name|void\ is_not ENUM\ ENUM_NAME}", shape="record", color=black, style=dotted]
//  _102_typedef_name[label="{_102_typedef_name|void\ is_not TYPEDEF_NAME}", shape="record", color=black, style=dotted]
//  _103_nested_name_specifier[label="{_103_nested_name_specifier|void\ is_not CLASS_NAME\ NAMESPACE_NAME\ TEMPLATE_NAME}", shape="record", color=black, style=dotted]
//  _104_template_id[label="_104_template_id"]
//  _105_template_name[label="{_105_template_name|void\ is_not TEMPLATE_NAME}", shape="record", color=black, style=dotted]
//  _106_decl_specifier[label="_106_decl_specifier"]
//  _107_preanalisys[label="{_107_preanalisys|f is IDENTIFIER\l|f\ is_not ;\ )\ COLONCOLON}", shape="record", color=green]
  _108_declarator[label="_108_declarator"]
//  _109_preanalisys[label="{_109_preanalisys|f\ is_not )\ ;}", shape="record", color=black, style=dotted]
  _110_direct_declarator[label="{_110_direct_declarator|( is  ( ) is  ) \l| \{ \ is_not =\ CONST\ ;\ \,}", shape="record", color=green]
  _111_declarator_id[label="_111_declarator_id"]
//  _112_COLONCOLON_opt[label="{_112_COLONCOLON_opt|f\ is_not COLONCOLON}", shape="record", color=black, style=dotted]
  _113_id_expression[label="_113_id_expression"]
  _114_unqualified_id[label="_114_unqualified_id"]
  _115_identifier[label="{_115_identifier|f is IDENTIFIER\l}", shape="record", color=green]
  _116_parameter_declaration_clause[label="{_116_parameter_declaration_clause|) is  ) \l}", shape="record", color=green]
//  _117_preanalisys[label="{_117_preanalisys|T1\ is_not )}", shape="record", color=black, style=dotted]
  _118_parameter_declaration_list_opt[label="_118_parameter_declaration_list_opt"]
  _119_parameter_declaration_list[label="{_119_parameter_declaration_list|) is  ) \l}", shape="record", color=green]
  _120_parameter_declaration[label="{_120_parameter_declaration|)\ is_not =}", shape="record", color=black, style=dotted]
  _121_decl_specifier_seq[label="_121_decl_specifier_seq"]
  _122_decl_specifier[label="_122_decl_specifier"]
//  _123_preanalisys[label="{_123_preanalisys|T1\ is_not ;\ )\ COLONCOLON\ IDENTIFIER\ ~\ #}", shape="record", color=black, style=dotted]
//  _124_storage_class_specifier[label="{_124_storage_class_specifier|T1\ is_not AUTO\ REGISTER\ STATIC\ EXTERN\ MUTABLE}", shape="record", color=black, style=dotted]
  _125_type_specifier[label="_125_type_specifier"]
  _126_simple_type_specifier[label="{_126_simple_type_specifier|T1 is TEMPLATE_TYPE\l|T1\ is_not CHAR\ WCHAR_T\ BOOL\ SHORT\ INT\ LONG\ SIGNED\ UNSIGNED\ FLOAT\ DOUBLE\ VOID}", shape="record", color=green]
//  _127_type_name[label="_127_type_name"]
//  _128_class_name[label="{_128_class_name|T1\ is_not CLASS_NAME}", shape="record", color=black, style=dotted]
//  _129_enum_name[label="{_129_enum_name|T1\ is_not ENUM\ ENUM_NAME}", shape="record", color=black, style=dotted]
//  _130_typedef_name[label="{_130_typedef_name|T1\ is_not TYPEDEF_NAME}", shape="record", color=black, style=dotted]
//  _131_nested_name_specifier[label="{_131_nested_name_specifier|T1\ is_not CLASS_NAME\ NAMESPACE_NAME\ TEMPLATE_NAME}", shape="record", color=black, style=dotted]
//  _132_template_id[label="_132_template_id"]
//  _133_template_name[label="{_133_template_name|T1\ is_not TEMPLATE_NAME}", shape="record", color=black, style=dotted]
  _134_decl_specifier[label="_134_decl_specifier"]
  _135_preanalisys[label="{_135_preanalisys|t1 is IDENTIFIER\l|t1\ is_not ;\ )\ COLONCOLON}", shape="record", color=green]
  _136_declarator[label="_136_declarator"]
//  _137_preanalisys[label="{_137_preanalisys|t1\ is_not )\ ;}", shape="record", color=black, style=dotted]
  _138_direct_declarator[label="{_138_direct_declarator|)\ is_not (\ \:\ \_}", shape="record", color=black, style=dotted]
  _139_declarator_id[label="_139_declarator_id"]
//  _140_COLONCOLON_opt[label="{_140_COLONCOLON_opt|t1\ is_not COLONCOLON}", shape="record", color=black, style=dotted]
  _141_id_expression[label="_141_id_expression"]
  _142_unqualified_id[label="_142_unqualified_id"]
  _143_identifier[label="{_143_identifier|t1 is IDENTIFIER\l}", shape="record", color=green]
  _147_function_body[label="_147_function_body"]  



  _CONTINUE_1 -> _90_function_definition;
  _90_function_definition->_92_decl_specifier_seq_opt;
  _92_decl_specifier_seq_opt->_93_decl_specifier_seq;
//  _93_decl_specifier_seq->_94_decl_specifier;
//  _94_decl_specifier->_95_preanalisys;
//  _94_decl_specifier->_96_storage_class_specifier;
//  _94_decl_specifier->_97_type_specifier;
//  _97_type_specifier->_98_simple_type_specifier;
//  _98_simple_type_specifier->_99_type_name;
//  _99_type_name->_100_class_name;
//  _99_type_name->_101_enum_name;
//  _99_type_name->_102_typedef_name;
//  _98_simple_type_specifier->_103_nested_name_specifier;
//  _98_simple_type_specifier->_104_template_id;
//  _104_template_id->_105_template_name;
//  _93_decl_specifier_seq->_106_decl_specifier;
//  _106_decl_specifier->_107_preanalisys;
  _90_function_definition->_108_declarator;
//  _108_declarator->_109_preanalisys;
  _108_declarator->_110_direct_declarator;
  _110_direct_declarator->_111_declarator_id;
//  _111_declarator_id->_112_COLONCOLON_opt;
  _111_declarator_id->_113_id_expression;
  _113_id_expression->_114_unqualified_id;
  _114_unqualified_id->_115_identifier;
  _110_direct_declarator->_116_parameter_declaration_clause;
//  _116_parameter_declaration_clause->_117_preanalisys;
  _116_parameter_declaration_clause->_118_parameter_declaration_list_opt;
  _118_parameter_declaration_list_opt->_119_parameter_declaration_list;
  _119_parameter_declaration_list->_120_parameter_declaration;
  _120_parameter_declaration->_121_decl_specifier_seq;
  _121_decl_specifier_seq->_122_decl_specifier;
//  _122_decl_specifier->_123_preanalisys;
//  _122_decl_specifier->_124_storage_class_specifier;
  _122_decl_specifier->_125_type_specifier;
  _125_type_specifier->_126_simple_type_specifier;
//  _126_simple_type_specifier->_127_type_name;
//  _127_type_name->_128_class_name;
//  _127_type_name->_129_enum_name;
//  _127_type_name->_130_typedef_name;
//  _126_simple_type_specifier->_131_nested_name_specifier;
//  _126_simple_type_specifier->_132_template_id;
//  _132_template_id->_133_template_name;
  _121_decl_specifier_seq->_134_decl_specifier;
  _134_decl_specifier->_135_preanalisys;
  _120_parameter_declaration->_136_declarator;
//  _136_declarator->_137_preanalisys;
  _136_declarator->_138_direct_declarator;
  _138_direct_declarator->_139_declarator_id;
//  _139_declarator_id->_140_COLONCOLON_opt;
  _139_declarator_id->_141_id_expression;
  _141_id_expression->_142_unqualified_id;
  _142_unqualified_id->_143_identifier;
  _90_function_definition->_147_function_body;
  _147_function_body -> _CONTINUE_2;
}
