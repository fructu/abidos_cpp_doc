== Introduction

In this manual i am going to explain how Abidos works, is important that the
reader of this manual have read the user manual and knows how to use Abidos
to parse C++ projects.

Parsing C++ is a hard task it has a complex grammar and Abidos is a
experimental solution using a descent parser handmade instead of an ascent parser
(yacc/bison).

=== Milestones

When i began this project i think in a set of phases, Milestones or goals 
that i want achieve with the time:

. Parsing C\++ and generate UML browsable diagrams; so far this phase is working
  but not full implemented yet, Abidos can parse a big portion of C++ grammar
  above all the part about declaration of classes, methods, functions, 
  variables, parameters... but all the inside body of method and functions
  need to be development.

. Refactor parts of code.

. Generating a set of backends customized to future projects, one of this 
  backends is the UML generator.

indexterm:[C++]
indexterm:[Parser]
indexterm:[Refactor, code refactor]

For now there is a lot of work to do in the parser core of Abidos.

=== How read this book

In order to have a good knowledge about Abidos C++ parts and learn to hack it
there are topics to study and these topics are very interconnected therefore is
a tough task write a clear manual due to explain topics needs to explain another
topics and these topics needs the first topics maybe the
best way is a whole first read to keep in mind what parts Abidos have and
which are his relations and later you can read some parts again when you need
an explanation about some topic or Abidos part.

The goal for the reader is understand the examples in advance trace chapter where
the most important cases are explained, but to understand these cases you need
pass through the valley of the previous topics.


